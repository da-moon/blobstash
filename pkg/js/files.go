package js

// Autogenerated ; DO NOT EDIT

var files = map[string]string{"webauthn.js": "// Webauthn module that makes it easy to work with BlobStash apps Webauthn API\nvar Webauthn = {\n  login: (credentialRequestOptions, cb) => { \n    credentialRequestOptions.challenge = Uint8Array.from(atob(credentialRequestOptions.challenge), c => c.charCodeAt(0))\n    if(credentialRequestOptions.allowCredentials) {\n      for (let i = 0; i < credentialRequestOptions.allowCredentials.length; i++) {\n        credentialRequestOptions.allowCredentials[i].id = Uint8Array.from(atob(credentialRequestOptions.allowCredentials[i].id), c => c.charCodeAt(0))\n      }\n    }\n\n    navigator.credentials.get({\n      publicKey: credentialRequestOptions,\n    }).then(opts => {\n      const toSend = {\n        id: opts.id,\n        rawId: btoa(String.fromCharCode.apply(null, new Uint8Array(opts.rawId))),\n        response: {\n          authenticatorData: btoa(String.fromCharCode.apply(null, new Uint8Array(opts.response.authenticatorData))),\n          signature: btoa(String.fromCharCode.apply(null, new Uint8Array(opts.response.signature))),\n          clientDataJSON: btoa(String.fromCharCode.apply(null, new Uint8Array(opts.response.clientDataJSON))),\n        },\n        type: opts.type\n      }\n      if(opts.extensions) {\n        toSend.extensions = opts.extensions\n      }\n      cb(toSend);\n    });\n  },\n  register: (credentialCreationOptions, cb) => {\n    credentialCreationOptions.user.id = Uint8Array.from(atob(credentialCreationOptions.user.id), c => c.charCodeAt(0))\n    credentialCreationOptions.challenge = Uint8Array.from(atob(credentialCreationOptions.challenge), c => c.charCodeAt(0))\n\n    navigator.credentials.create({\n      publicKey: credentialCreationOptions\n    }).then(opts => {\n      const toSend = {\n        id: opts.id,\n        rawId: btoa(String.fromCharCode.apply(null, new Uint8Array(opts.rawId))),\n        response: {\n          attestationObject: btoa(String.fromCharCode.apply(null, new Uint8Array(opts.response.attestationObject))),\n          clientDataJSON: btoa(String.fromCharCode.apply(null, new Uint8Array(opts.response.clientDataJSON)))\n        }\n      }\n      if(opts.extensions) {\n        toSend.extensions = opts.extensions;\n      }\n      cb(toSend);\n    });\n  },\n}\n"}
